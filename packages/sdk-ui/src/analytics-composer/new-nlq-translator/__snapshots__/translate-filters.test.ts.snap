// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`translateFilters > should translate filter relations 1`] = `
{
  "composeCode": "filterFactory.logic.and(filterFactory.logic.or(filterFactory.members(DM.Country.Country, ['United States', 'Canada']), filterFactory.members(DM.Brand.Brand, ['Brand A', 'Brand B'])), filterFactory.measureGreaterThan(measureFactory.sum(DM.Commerce.Revenue), 1000))",
  "left": {
    "composeCode": "filterFactory.logic.or(filterFactory.members(DM.Country.Country, ['United States', 'Canada']), filterFactory.members(DM.Brand.Brand, ['Brand A', 'Brand B']))",
    "left": {
      "__serializable": "MembersFilter",
      "_name": "filter",
      "attribute": {
        "__serializable": "DimensionalAttribute",
        "composeCode": "DM.Country.Country",
        "dataSource": {
          "address": "LocalHost",
          "id": "localhost_aSampleIAAaECommerce",
          "live": false,
          "title": "Sample ECommerce",
        },
        "description": "",
        "expression": "[Country.Country]",
        "name": "Country",
        "type": "text-attribute",
      },
      "composeCode": "filterFactory.members(DM.Country.Country, ['United States', 'Canada'])",
      "config": {
        "deactivatedMembers": [],
        "disabled": false,
        "enableMultiSelection": true,
        "excludeMembers": false,
        "locked": false,
      },
      "description": "",
      "filterType": "members",
      "isScope": true,
      "members": [
        "United States",
        "Canada",
      ],
      "type": "filter",
    },
    "operator": "OR",
    "right": {
      "__serializable": "MembersFilter",
      "_name": "filter",
      "attribute": {
        "__serializable": "DimensionalAttribute",
        "composeCode": "DM.Brand.Brand",
        "dataSource": {
          "address": "LocalHost",
          "id": "localhost_aSampleIAAaECommerce",
          "live": false,
          "title": "Sample ECommerce",
        },
        "description": "",
        "expression": "[Brand.Brand]",
        "name": "Brand",
        "type": "text-attribute",
      },
      "composeCode": "filterFactory.members(DM.Brand.Brand, ['Brand A', 'Brand B'])",
      "config": {
        "deactivatedMembers": [],
        "disabled": false,
        "enableMultiSelection": true,
        "excludeMembers": false,
        "locked": false,
      },
      "description": "",
      "filterType": "members",
      "isScope": true,
      "members": [
        "Brand A",
        "Brand B",
      ],
      "type": "filter",
    },
  },
  "operator": "AND",
  "right": {
    "__serializable": "MeasureFilter",
    "_name": "filter",
    "attribute": {
      "__serializable": "DimensionalAttribute",
      "composeCode": "DM.Commerce.Revenue",
      "dataSource": {
        "address": "LocalHost",
        "id": "localhost_aSampleIAAaECommerce",
        "live": false,
        "title": "Sample ECommerce",
      },
      "description": "",
      "expression": "[Commerce.Revenue]",
      "name": "Revenue",
      "type": "numeric-attribute",
    },
    "composeCode": "filterFactory.measureGreaterThan(measureFactory.sum(DM.Commerce.Revenue), 1000)",
    "config": {
      "disabled": false,
      "locked": false,
    },
    "description": "",
    "filterType": "measure",
    "isScope": true,
    "measure": {
      "__serializable": "DimensionalBaseMeasure",
      "aggregation": "sum",
      "attribute": {
        "__serializable": "DimensionalAttribute",
        "composeCode": "DM.Commerce.Revenue",
        "dataSource": {
          "address": "LocalHost",
          "id": "localhost_aSampleIAAaECommerce",
          "live": false,
          "title": "Sample ECommerce",
        },
        "description": "",
        "expression": "[Commerce.Revenue]",
        "name": "Revenue",
        "type": "numeric-attribute",
      },
      "composeCode": "measureFactory.sum(DM.Commerce.Revenue)",
      "dataSource": undefined,
      "description": "",
      "name": "sum Revenue",
      "sort": 0,
      "type": "basemeasure",
    },
    "operatorA": "fromNotEqual",
    "type": "filter",
    "valueA": 1000,
  },
}
`;

exports[`translateFilters > should translate filters 1`] = `
[
  {
    "__serializable": "MembersFilter",
    "_name": "filter",
    "attribute": {
      "__serializable": "DimensionalLevelAttribute",
      "composeCode": "DM.Commerce.Date.Years",
      "dataSource": {
        "address": "LocalHost",
        "id": "localhost_aSampleIAAaECommerce",
        "live": false,
        "title": "Sample ECommerce",
      },
      "description": "",
      "expression": "[Commerce.Date]",
      "format": "yyyy",
      "granularity": "Years",
      "name": "Date",
      "type": "datelevel",
    },
    "composeCode": "filterFactory.members(DM.Commerce.Date.Years, ['2024-01-01T00:00:00', '2025-01-01T00:00:00'], { disabled: false, locked: false, excludeMembers: false, enableMultiSelection: true, deactivatedMembers: [] })",
    "config": {
      "deactivatedMembers": [],
      "disabled": false,
      "enableMultiSelection": true,
      "excludeMembers": false,
      "locked": false,
    },
    "description": "",
    "filterType": "members",
    "isScope": true,
    "members": [
      "2024-01-01T00:00:00",
      "2025-01-01T00:00:00",
    ],
    "type": "filter",
  },
  {
    "__serializable": "MembersFilter",
    "_name": "filter",
    "attribute": {
      "__serializable": "DimensionalAttribute",
      "composeCode": "DM.Country.Country",
      "dataSource": {
        "address": "LocalHost",
        "id": "localhost_aSampleIAAaECommerce",
        "live": false,
        "title": "Sample ECommerce",
      },
      "description": "",
      "expression": "[Country.Country]",
      "name": "Country",
      "type": "text-attribute",
    },
    "composeCode": "filterFactory.members(DM.Country.Country, ['United States'])",
    "config": {
      "deactivatedMembers": [],
      "disabled": false,
      "enableMultiSelection": true,
      "excludeMembers": false,
      "locked": false,
    },
    "description": "",
    "filterType": "members",
    "isScope": true,
    "members": [
      "United States",
    ],
    "type": "filter",
  },
]
`;

exports[`translateFilters > translateHighlightsFromJSONFunctionCall > should translate highlights from parsed function calls 1`] = `
[
  {
    "__serializable": "MembersFilter",
    "_name": "filter",
    "attribute": {
      "__serializable": "DimensionalAttribute",
      "composeCode": "DM.Country.Country",
      "dataSource": {
        "address": "LocalHost",
        "id": "localhost_aSampleIAAaECommerce",
        "live": false,
        "title": "Sample ECommerce",
      },
      "description": "",
      "expression": "[Country.Country]",
      "name": "Country",
      "type": "text-attribute",
    },
    "composeCode": "filterFactory.members(DM.Country.Country, ['United States'])",
    "config": {
      "deactivatedMembers": [],
      "disabled": false,
      "enableMultiSelection": true,
      "excludeMembers": false,
      "locked": false,
    },
    "description": "",
    "filterType": "members",
    "isScope": true,
    "members": [
      "United States",
    ],
    "type": "filter",
  },
  {
    "__serializable": "MembersFilter",
    "_name": "filter",
    "attribute": {
      "__serializable": "DimensionalAttribute",
      "composeCode": "DM.Brand.Brand",
      "dataSource": {
        "address": "LocalHost",
        "id": "localhost_aSampleIAAaECommerce",
        "live": false,
        "title": "Sample ECommerce",
      },
      "description": "",
      "expression": "[Brand.Brand]",
      "name": "Brand",
      "type": "text-attribute",
    },
    "composeCode": "filterFactory.members(DM.Brand.Brand, ['Brand A'])",
    "config": {
      "deactivatedMembers": [],
      "disabled": false,
      "enableMultiSelection": true,
      "excludeMembers": false,
      "locked": false,
    },
    "description": "",
    "filterType": "members",
    "isScope": true,
    "members": [
      "Brand A",
    ],
    "type": "filter",
  },
]
`;
