export const translation = {
  errors: {
    invalidAttribute:
      'Invalid attribute {{attributeName}}. Hint: attributes for query should be extracted from the data model generated by the CLI tool.',
    noDimensionsOrMeasures:
      'Neither dimensions nor measures found. Query should have at least one dimension or measure.',
    invalidMeasure:
      'Invalid measure "{{measureName}}". Hint: measures for the query can be constructed using the "measureFactory" functions.',
    invalidFilter:
      'Invalid filter "{{filterName}}". Hint: filters for the query can be constructed using the "filterFactory" functions.',
    invalidHighlight:
      'Invalid highlight "{{highlightName}}". Hint: highlights for the query can be constructed using the "filterFactory" functions.',
    invalidCountNegative: 'Invalid count "{{count}}". Count should be non-negative.',
    invalidOffset: 'Invalid offset "{{offset}}". Offset should be non-negative.',
    missingHttpClient: 'Query requires httpClient to work properly.',
    missingPostMethod: 'httpClient must provide "post" method.',
    noJaqlResponse: 'No jaql response received from the server',
    dataSourceNotFound:
      'Failed to get fields for data source "{{dataSource}}". Please make sure the data source exists and is accessible.',
  },
};

/**
 * A reference type containing all currently used translation keys.
 * This type serves as a complete resource for creating custom translations,
 * ensuring that all required keys are present and included.
 * It can also be used as Partial to make sure custom translation does not contain any typos.
 *
 * @example
 * ```typescript
 * import { TranslationDictionary } from '@ethings-os/sdk-query-client';
 *
 * const customTranslationResources: Partial<TranslationDictionary> = {
 * ```
 * @internal
 */
export type TranslationDictionary = typeof translation;
