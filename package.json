{
  "version": "2.1.1",
  "name": "@sisense/root",
  "type": "module",
  "license": "SEE LICENSE IN LICENSE.md",
  "private": true,
  "nx": {
    "implicitDependencies": [
      "@sisense/sdk-data",
      "@sisense/sdk-ui",
      "@sisense/sdk-ui-preact",
      "@sisense/sdk-ui-angular",
      "@sisense/sdk-ui-vue"
    ],
    "targets": {
      "docs:check:md": {
        "cache": true,
        "dependsOn": [
          "^build:prod"
        ]
      },
      "docs:gen:md": {
        "outputs": [
          "{workspaceRoot}/docs-md"
        ],
        "cache": true,
        "dependsOn": [
          "^build:prod"
        ]
      },
      "nx:test:coverage:collect:report": {
        "dependsOn": [
          "^build:prod"
        ],
        "outputs": [
          "{workspaceRoot}/coverage"
        ],
        "cache": true
      }
    }
  },
  "workspaces": [
    "packages/*",
    "packages/internal/*",
    "examples/*demo",
    "e2e/",
    "typedoc-plugins/typedoc-plugin-markdown/",
    "typedoc-plugins/typedoc-plugin-diff-packages/"
  ],
  "scripts": {
    "dev": "yarn workspace @sisense/sdk-ui dev",
    "demo": "yarn workspace @sisense/react-ts-demo dev",
    "demo:vue": "yarn workspace @sisense/vue-ts-demo dev",
    "demo:angular": "yarn workspace @sisense/angular-demo start",
    "build": "yarn nx:build",
    "build:packages": "yarn nx run-many --target=build --projects='packages/*'",
    "storybook": "yarn workspace @sisense/sdk-ui storybook",
    "storybook:dev": "nx run-many --exclude @sisense/root -t  storybook:dev",
    "build:prod": "yarn nx:build:prod",
    "build:changed:prod": "yarn workspaces foreach --since=origin/master --verbose  --verbose --topological --no-private -R run build:prod",
    "clean": "yarn workspaces foreach run clean && rm -rf ./coverage && rm -rf ./.nyc_output && nx reset",
    "reset": "yarn clean && rm -rf ./node_modules",
    "lint": "yarn workspaces foreach -p --verbose run lint",
    "lint:fix": "yarn workspaces foreach -p --verbose run lint:fix",
    "lint:changed": "yarn workspaces foreach --since run lint",
    "format": "yarn workspaces foreach -p run format",
    "format:check": "yarn workspaces foreach -p run format:check",
    "test": "yarn workspaces foreach -p --verbose run test",
    "test:coverage": "yarn nx:test:coverage",
    "test:coverage:collect": "mkdir -p .nyc_output && node ./ci/collect-coverage-files.cjs collectFiles --pattern='packages/**/coverage-final.json' --target='.nyc_output'",
    "test:coverage:report": "nyc report --reporter lcov --reporter text-summary --reporter cobertura",
    "test:coverage:combine": "yarn test:coverage && yarn test:coverage:collect && yarn test:coverage:report",
    "test:collect:report": "yarn test:coverage:collect && yarn test:coverage:report",
    "test:ct": "yarn workspaces foreach --verbose run test:ct",
    "test:visual": "yarn workspaces foreach --verbose run test:visual",
    "g:cli": "yarn workspace @sisense/sdk-cli run cli",
    "version-and-publish": "./ci/version-and-publish.sh",
    "version:current": "node ./scripts/current-version.cjs",
    "publish": "yarn workspaces foreach --no-private npm publish --tolerate-republish",
    "docs:gen": "TYPEDOC_MODE=PUBLIC typedoc --options typedoc.config.cjs",
    "docs:serve": "node ./scripts/serve-static.cjs docs",
    "docs:gen:internal": "TYPEDOC_MODE=INTERNAL typedoc --options typedoc.config.cjs",
    "docs:serve:internal": "node ./scripts/serve-static.cjs docs-internal",
    "docs:gen:md": "./scripts/gen-docs-md.sh",
    "docs:check:md": "./scripts/check-docs-md.sh",
    "docs:frameworks:diff": "./scripts/diff-docs-ui.sh",
    "docs:frameworks:diff:full": "FULL_DIFF_REPORT=true ./scripts/diff-docs-ui.sh",
    "prepare": "husky install",
    "nx:build": "nx run-many --exclude @sisense/root -t build",
    "nx:build:af": "nx affected --base=origin/master --head=HEAD --exclude @sisense/root -t build",
    "nx:test": "nx run-many --exclude @sisense/root -t test",
    "nx:test:af": "nx affected --base=origin/master --head=HEAD --exclude @sisense/root -t test",
    "nx:test:coverage": "nx run-many --exclude @sisense/root -t test:coverage",
    "nx:test:coverage:af": "nx affected --base=origin/master --head=HEAD --exclude @sisense/root -t test:coverage",
    "nx:lint": "nx run-many --exclude @sisense/root -t lint",
    "nx:lint:af": "nx affected --base=origin/master --head=HEAD --exclude @sisense/root -t lint",
    "nx:format": "nx run-many --exclude @sisense/root -t format",
    "nx:format:af": "nx nx affected  --base=origin/master --head=HEAD --exclude @sisense/root -t format",
    "nx:format:check": "nx run-many --exclude @sisense/root -t format:check",
    "nx:format:check:af": "nx affected  --base=origin/master --head=HEAD --exclude @sisense/root -t format:check",
    "nx:build:prod": "nx run-many --exclude @sisense/root -t build:prod",
    "nx:build:prod:af": "nx affected  --base=origin/master --head=HEAD --exclude @sisense/root -t build:prod",
    "nx:component:tests": "nx run-many --exclude @sisense/root -t component:tests",
    "nx:component:tests:af": "nx affected --exclude @sisense/root -t component:tests",
    "nx:test:coverage:collect:report": "nx run @sisense/root:nx:test:coverage && nx run @sisense/root:test:coverage:collect && nx run @sisense/root:test:coverage:report"
  },
  "files": [
    "packages/**/dist/*"
  ],
  "packageManager": "yarn@3.2.3",
  "volta": {
    "node": "18.16.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^17.6.1",
    "@sisense/commitlint-config": "^1.9.9",
    "@sisense/eslint-config": "1.9.12",
    "@sisense/prettier-config": "^1.9.9",
    "@sisense/typedoc-plugin-diff-packages": "0.1.0",
    "@sisense/typedoc-plugin-markdown": "0.0.0",
    "@vitest/coverage-istanbul": "2.1.9",
    "eslint": "^8.40.0",
    "eslint-plugin-i18next": "^6.1.0",
    "eslint-plugin-rulesdir": "^0.2.2",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-tsdoc": "0.2.17",
    "eslint-plugin-vitest": "0.2.8",
    "express": "^4.18.2",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.1",
    "nx": "20.0.0",
    "nyc": "^17.1.0",
    "prettier": "^2.8.8",
    "typedoc": "0.26.10",
    "typedoc-plugin-vue": "^1.2.0",
    "vitest": "^2.1.9"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "prettier --write"
    ],
    "*.{json,yaml,yml,md}": [
      "prettier --write"
    ]
  }
}
